// flow-typed signature: bac81cfa394eeefff20950a16c3cfe67
// flow-typed version: <<STUB>>/eslint-plugin-ft-flow_v^2.0.1/flow_v0.182.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'eslint-plugin-ft-flow'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'eslint-plugin-ft-flow' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'eslint-plugin-ft-flow/dist' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/arrayStyle' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/arrayStyle/isSimpleType' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/arrayStyle/needWrap' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/arrayStyleComplexType' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/arrayStyleSimpleType' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/arrowParens' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/booleanStyle' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/defineFlowType' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/delimiterDangle' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/enforceLineBreak' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/enforceSuppressionCode' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/genericSpacing' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/interfaceIdMatch' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/newlineAfterFlowAnnotation' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/noDupeKeys' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/noDuplicateTypeUnionIntersectionMembers' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/noExistentialType' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/noFlowFixMeComments' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/noFlowSuppressionsInStrictFiles' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/noInternalFlowType' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/noMixed' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/noMutableArray' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/noPrimitiveConstructorTypes' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/noTypesMissingFileAnnotation' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/noUnusedExpressions' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/noWeakTypes' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/objectTypeCurlySpacing' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/objectTypeDelimiter' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/quotes' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/requireCompoundTypeAlias' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/requireExactType' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/requireIndexerName' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/requireInexactType' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/requireParameterType' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/requireReadonlyReactProps' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/requireReturnType' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/requireTypesAtTop' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/requireValidFileAnnotation' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/requireVariableType' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/semi' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/sortKeys' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/sortTypeUnionIntersectionMembers' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/spaceAfterTypeColon' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/spaceBeforeGenericBracket' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/spaceBeforeTypeColon' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/spreadExactType' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/evaluateFunctions' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/evaluateObjectTypeIndexer' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/evaluateObjectTypeProperty' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/evaluateReturnType' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/evaluateTypeCastExpression' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/evaluateTypical' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/evaluateVariables' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/typeColonSpacing' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/reporter' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/typeIdMatch' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/typeImportStyle' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/unionIntersectionSpacing' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/useFlowType' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/useReadOnlySpread' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/rules/validSyntax' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/utilities/checkFlowFileAnnotation' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/utilities/fuzzyStringMatch' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/utilities/getBuiltinRule' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/utilities/getBuiltinRule.spec' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/utilities/getParameterName' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/utilities/getTokenAfterParens' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/utilities/getTokenBeforeParens' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/utilities' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/utilities/isFlowFile' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/utilities/isFlowFileAnnotation' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/utilities/isNoFlowFile' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/utilities/isNoFlowFileAnnotation' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/utilities/iterateFunctionNodes' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/utilities/quoteName' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/utilities/spacingFixers' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ft-flow/dist/utilities/suppressionTypes' {
  declare module.exports: any;
}

// Filename aliases
declare module 'eslint-plugin-ft-flow/dist/index' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist'>;
}
declare module 'eslint-plugin-ft-flow/dist/index.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/arrayStyle/index' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/arrayStyle'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/arrayStyle/index.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/arrayStyle'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/arrayStyle/isSimpleType.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/arrayStyle/isSimpleType'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/arrayStyle/needWrap.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/arrayStyle/needWrap'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/arrayStyleComplexType.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/arrayStyleComplexType'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/arrayStyleSimpleType.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/arrayStyleSimpleType'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/arrowParens.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/arrowParens'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/booleanStyle.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/booleanStyle'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/defineFlowType.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/defineFlowType'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/delimiterDangle.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/delimiterDangle'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/enforceLineBreak.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/enforceLineBreak'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/enforceSuppressionCode.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/enforceSuppressionCode'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/genericSpacing.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/genericSpacing'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/interfaceIdMatch.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/interfaceIdMatch'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/newlineAfterFlowAnnotation.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/newlineAfterFlowAnnotation'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/noDupeKeys.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/noDupeKeys'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/noDuplicateTypeUnionIntersectionMembers.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/noDuplicateTypeUnionIntersectionMembers'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/noExistentialType.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/noExistentialType'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/noFlowFixMeComments.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/noFlowFixMeComments'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/noFlowSuppressionsInStrictFiles.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/noFlowSuppressionsInStrictFiles'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/noInternalFlowType.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/noInternalFlowType'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/noMixed.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/noMixed'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/noMutableArray.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/noMutableArray'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/noPrimitiveConstructorTypes.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/noPrimitiveConstructorTypes'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/noTypesMissingFileAnnotation.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/noTypesMissingFileAnnotation'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/noUnusedExpressions.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/noUnusedExpressions'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/noWeakTypes.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/noWeakTypes'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/objectTypeCurlySpacing.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/objectTypeCurlySpacing'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/objectTypeDelimiter.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/objectTypeDelimiter'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/quotes.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/quotes'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/requireCompoundTypeAlias.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/requireCompoundTypeAlias'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/requireExactType.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/requireExactType'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/requireIndexerName.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/requireIndexerName'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/requireInexactType.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/requireInexactType'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/requireParameterType.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/requireParameterType'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/requireReadonlyReactProps.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/requireReadonlyReactProps'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/requireReturnType.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/requireReturnType'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/requireTypesAtTop.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/requireTypesAtTop'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/requireValidFileAnnotation.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/requireValidFileAnnotation'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/requireVariableType.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/requireVariableType'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/semi.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/semi'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/sortKeys.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/sortKeys'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/sortTypeUnionIntersectionMembers.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/sortTypeUnionIntersectionMembers'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/spaceAfterTypeColon.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/spaceAfterTypeColon'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/spaceBeforeGenericBracket.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/spaceBeforeGenericBracket'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/spaceBeforeTypeColon.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/spaceBeforeTypeColon'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/spreadExactType.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/spreadExactType'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/evaluateFunctions.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/evaluateFunctions'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/evaluateObjectTypeIndexer.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/evaluateObjectTypeIndexer'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/evaluateObjectTypeProperty.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/evaluateObjectTypeProperty'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/evaluateReturnType.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/evaluateReturnType'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/evaluateTypeCastExpression.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/evaluateTypeCastExpression'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/evaluateTypical.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/evaluateTypical'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/evaluateVariables.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/evaluateVariables'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/index' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/typeColonSpacing'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/index.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/typeColonSpacing'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/reporter.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/typeColonSpacing/reporter'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/typeIdMatch.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/typeIdMatch'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/typeImportStyle.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/typeImportStyle'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/unionIntersectionSpacing.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/unionIntersectionSpacing'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/useFlowType.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/useFlowType'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/useReadOnlySpread.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/useReadOnlySpread'>;
}
declare module 'eslint-plugin-ft-flow/dist/rules/validSyntax.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/rules/validSyntax'>;
}
declare module 'eslint-plugin-ft-flow/dist/utilities/checkFlowFileAnnotation.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/utilities/checkFlowFileAnnotation'>;
}
declare module 'eslint-plugin-ft-flow/dist/utilities/fuzzyStringMatch.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/utilities/fuzzyStringMatch'>;
}
declare module 'eslint-plugin-ft-flow/dist/utilities/getBuiltinRule.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/utilities/getBuiltinRule'>;
}
declare module 'eslint-plugin-ft-flow/dist/utilities/getBuiltinRule.spec.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/utilities/getBuiltinRule.spec'>;
}
declare module 'eslint-plugin-ft-flow/dist/utilities/getParameterName.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/utilities/getParameterName'>;
}
declare module 'eslint-plugin-ft-flow/dist/utilities/getTokenAfterParens.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/utilities/getTokenAfterParens'>;
}
declare module 'eslint-plugin-ft-flow/dist/utilities/getTokenBeforeParens.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/utilities/getTokenBeforeParens'>;
}
declare module 'eslint-plugin-ft-flow/dist/utilities/index' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/utilities'>;
}
declare module 'eslint-plugin-ft-flow/dist/utilities/index.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/utilities'>;
}
declare module 'eslint-plugin-ft-flow/dist/utilities/isFlowFile.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/utilities/isFlowFile'>;
}
declare module 'eslint-plugin-ft-flow/dist/utilities/isFlowFileAnnotation.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/utilities/isFlowFileAnnotation'>;
}
declare module 'eslint-plugin-ft-flow/dist/utilities/isNoFlowFile.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/utilities/isNoFlowFile'>;
}
declare module 'eslint-plugin-ft-flow/dist/utilities/isNoFlowFileAnnotation.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/utilities/isNoFlowFileAnnotation'>;
}
declare module 'eslint-plugin-ft-flow/dist/utilities/iterateFunctionNodes.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/utilities/iterateFunctionNodes'>;
}
declare module 'eslint-plugin-ft-flow/dist/utilities/quoteName.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/utilities/quoteName'>;
}
declare module 'eslint-plugin-ft-flow/dist/utilities/spacingFixers.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/utilities/spacingFixers'>;
}
declare module 'eslint-plugin-ft-flow/dist/utilities/suppressionTypes.js' {
  declare module.exports: $Exports<'eslint-plugin-ft-flow/dist/utilities/suppressionTypes'>;
}
